package classesPrincipais;
import java.util.Scanner;

public class CoisaCLI {
	
	
	
	public static void main(String[] args) {
		Scanner sc = new Scanner(System.in);
		int escolha;
	
		exibirMenu();
		escolha = sc.nextInt();
		
		switch (escolha) {
		case 1:{
			descanso();
			break;
		}
		case 2:{
			registroOnline();
			break;
			
		}
		case 3:{
			disciplina();
			break;
			
		}
		case 4:{
			atividadesComplementares();
			break;
			
			
		}
		default:
			System.out.println("Você digitou uma opção inválida!");
			break;
		}
			
		
		
		
		
	}
	
	private static void exibirMenu() {
		System.out.println("O que você deseja alterar?\nDigite"
				+ " uma opção entre 1 e 4:\n");
		
		System.out.println("1 - Rotina de Descanso");
		System.out.println("2 - Registro de Tempo Online");
		System.out.println("3 - Disciplina");
		System.out.println("4 - Registro de Atividades Complementares");
		System.out.print("Insira a sua escolha: ");
		
		
		
	}
	 public static void descanso() {
		   Descanso descanso = new Descanso();
		   Scanner sc = new Scanner(System.in);
		   String acaoEscolhida = new String();
		   String[] acaoEscolhidaSplit = new String[2];
		   int parametro;
		   String continuidade = "sim";
		   
		   System.out.println("Digite uma ação a ser executada, no formato: "
		   		+ "nomedométodo  parâmetro(s), caso não tenha parâmetro, insira 0");
		   
		   acaoEscolhida = sc.nextLine();
		   acaoEscolhidaSplit = acaoEscolhida.split(" ");
		   parametro = Integer.parseInt(acaoEscolhidaSplit[1]);
		   
		   while(true) {
			   
			   
			   if(acaoEscolhidaSplit[0].equals("status")) {
				   System.out.println(descanso.getStatusGeral()); 
				   
				   
			   }	
			   else if(acaoEscolhidaSplit[0].equals("horasdescanso")) {
				   descanso.defineHorasDescanso(parametro);
				   
			   }
			   else if(acaoEscolhidaSplit[0].equals("semanasdescanso")) {
				   descanso.defineNumeroSemanas(parametro);
			   }
			   System.out.println("Deseja continuar? Digite <sim> ou <não> ");
			   continuidade = sc.nextLine();
			   
			   if(continuidade.equals("não")) {
				   break;
			   }
			   
			   System.out.println("Digite uma ação a ser executada, no formato: "
				   		+ "nomedométodo  parâmetro(s), caso não tenha parâmetro, insira 0");
			   acaoEscolhida = sc.nextLine();
			   acaoEscolhidaSplit = acaoEscolhida.split(" ");
			   parametro = Integer.parseInt(acaoEscolhidaSplit[1]);
			   
		   }
		   System.out.println("Programa encerrado!");
		   
		   
		   
	   }
	 
	 private static void registroOnline() {
		   Scanner sc = new Scanner(System.in);
		   RegistroTempoOnline tempoLP2 = new RegistroTempoOnline("LP2", 30);
		   String acaoEscolhida = new String();
		   String[] acaoEscolhidaSplit = new String[2];
		   int parametro;
		   String continuidade = "sim";
		   
		   System.out.println("Digite uma ação a ser executada, no formato: "
			   		+ "nomedométodo  parâmetro(s), caso não tenha parâmetro, insira 0");
			   
		   acaoEscolhida = sc.nextLine();
		   acaoEscolhidaSplit = acaoEscolhida.split(" ");
		   parametro = Integer.parseInt(acaoEscolhidaSplit[1]);
		   
		   while(true) {
			   if(acaoEscolhidaSplit[0].equals("adicionatempo")) {
				   tempoLP2.adicionaTempoOnline(parametro);
			   }
			   else if(acaoEscolhidaSplit[0].equals("atingiumeta")) {
				   System.out.println(tempoLP2.atingiuMetaTempoOnline());
			   }
			   else if(acaoEscolhidaSplit[0].equals("exibir")) {
				   System.out.println(tempoLP2.toString());
			   }
			   
			   System.out.println("Deseja continuar? Digite <sim> ou <não> ");
			   continuidade = sc.nextLine();
			   
			   if(continuidade.equals("não")) {
				   break;
			   }
			   
			   System.out.println("Digite uma ação a ser executada, no formato: "
				   		+ "nomedométodo  parâmetro(s), caso não tenha parâmetro, insira 0");
			   
			   acaoEscolhida = sc.nextLine();
			   acaoEscolhidaSplit = acaoEscolhida.split(" ");
			   parametro = Integer.parseInt(acaoEscolhidaSplit[1]);
			   
		   }
		   System.out.println("Programa encerrado!");
			   
			   
		   
	       
	   }
	 private static void disciplina() {
	       Disciplina prog2 = new Disciplina("PROGRAMACAO 2");
	       prog2.cadastraHoras(4);
	       prog2.cadastraNota(1, 5.0);
	       prog2.cadastraNota(2, 6.0);
	       prog2.cadastraNota(3, 7.0);
	       System.out.println(prog2.aprovado());
	       prog2.cadastraNota(4, 10.0);
	       System.out.println(prog2.aprovado());
	       System.out.println(prog2.toString());
	   }
	 private static void atividadesComplementares() {
	       AtividadesComplementares minhasAtividades = new AtividadesComplementares();
	       int horasEstagio = 350;
	       int mesesProjeto = 6;
	       double horasCurso = 40.5;
	       minhasAtividades.adicionarEstagio(horasEstagio);
	       minhasAtividades.adicionarProjeto(mesesProjeto);
	       minhasAtividades.adicionarCurso(horasCurso);
	       String[] atividades = minhasAtividades.pegaAtividades();
	       for (int i = 0; i < atividades.length; i++) {
	           System.out.println(minhasAtividades.pegaAtividades()[i]);
	       }
	       System.out.println(minhasAtividades.contaCreditos());
	 
	       double horasOutroCurso = 49.5;
	       int mesesOutroProjeto = 7;
	 
	       minhasAtividades.adicionarProjeto(mesesOutroProjeto);
	       minhasAtividades.adicionarCurso(horasOutroCurso);
	      
	       atividades = minhasAtividades.pegaAtividades();
	       for (int i = 0; i < atividades.length; i++) {
	           System.out.println(minhasAtividades.pegaAtividades()[i]);
	       }
	       System.out.println(minhasAtividades.contaCreditos());
	 
	   }
	
}


